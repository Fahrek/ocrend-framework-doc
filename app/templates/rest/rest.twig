{% extends 'overall/layout' %}
{% block appBody %}
    <div class="contenedor">
        <main class="row">

            {% include 'overall/menu' %}

            <section class="col-xs-12 col-sm-8 col-sm-offset-4 col-md-8 col-md-offset-4 col-lg-9 col-lg-offset-3">
                <h1>API RESTFULL con Silex</h1>  
                <p>La API Rest de Ocrend Framework está realizada con Silex, es un microframework desarrollado con PHP. Se basa en los mismos principios de Symfony y Pimple y está inspirado por el microframework Sinatra de Ruby.</p>
                <ul>
					<li><b>Conciso:</b> Silex proporciona una API concisa e intuitiva.</li>
					<li><b>Extensible:</b> Silex dispone de un sistema de extensiones basado en el micro contenedor de servicios Pimple y que facilita el uso de librerías creadas por terceros.</li>
					<li><b>Facil de testear:</b> Silex utiliza el componente HttpKernel de Symfony para abstraer el manejo de la petición HTTP y de su respuesta. Esto facilita mucho la creación de tests tanto para las aplicaciones como para el propio framework. Además, Silex respeta la filosofía de funcionamiento de la especificación HTTP y te ayuda a que tu también la sigas.</li>
					<li>El funcionamiento básico de Silex consiste en definir controladores y asociarlos con rutas, todo en un solo paso.</li>
				</ul> 

                <h2>Cómo utilizarla</h2>
                <p>La integración con Ocrend Framework está realizada por defecto, al configurar el framework para que funcione en un servidor, también lo estará la api restfull.</p>  
               
                <h3>Peticiones</h3>
                <p>La integración por defecto <b>acepta peticiones JSON</b> con los verbos <span>GET</span> y <span>POST</span></p>
                
                <h4>Verbo <span>GET</span> en <span>./api/controllers/get.controllers.php</span></h4>
<pre class="php"><code>
$app->get('/mi/ruta/get', function() use($app) {

    return $app->json(array('Esto funciona en GET'));
    
});
</code></pre>

                <h4>Verbo <span>POST</span> en <span>./api/controllers/post.controllers.php</span></h4>
<pre class="php"><code>
$app->post('/mi/ruta/post', function() use($app) {

    return $app->json(array('Esto funciona en POST'));
    
});
</code></pre>

            <h4>Cómo enviar data de un formulario como JSON vía AJAX con jQuery</h4>
<pre class="js"><code>
var __data = {};

$('#ID_DE_FORMULARIO').serializeArray().map(function(x){__data[x.name] = x.value;}); 

$.ajax({
    type : '', // POST o GET
    url : 'api/endpoint',
    dataType: 'json',
    data : __data,
    success : function(json) {
        console.log(json);
    },
    error : function(xhr, status) {
        console.log('Ha ocurrido un problema interno');
    }
});
</code></pre>

                <h2>Activar/Desactivar la API</h2>
                <p>Se debe marcar como <span>false</span> el valor de <span>api/active</span> en <span>Ocrend.ini.yml</span> para desactivar la API.</p>
                <p>Al estar desactivada, cualquier petición realizada recibirá una respuesta <span>200</span> con JSON:</p>
<pre class="js"><code>
{
    'success' : 0,
    'message' : 'Servicio inactivo'
}
</code></pre>             

                <h2>Controlar el origen de las peticiones</h2>
                <p>El origen de las peticiones puede ser restringido a dominios especificados en <span>api/origin</span>  en <span>Ocrend.ini.yml</span>, por defecto el valor es <span>*</span>, ésto implica que la API puede recbir peticiones <span>de cualquier fuente</span> externa al servidor, <b>se recomienda modificar dicho parámetro por el dominio en donde correrá el framework, si ésta no será consumida desde fuentes externas.</b></p>

                <h2>Documentación extensa</h2>
                <ul>
					<li>Gracias a <strong>librosdelweb</strong>, hay una documentación extensa en español que se puede visitar aquí <a href="http://librosweb.es/libro/silex/" target="_blank">http://librosweb.es/libro/silex/</a></li>
				</ul>
            </section>

        </main>
    </div>

    {% include 'overall/footer' %}
{% endblock %}
